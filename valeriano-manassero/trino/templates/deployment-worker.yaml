{{- if gt (int .Values.config.worker.replicas) 0 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trino.worker" . }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
spec:
  replicas: {{ .Values.config.worker.replicas }}
  selector:
    matchLabels:
      {{- include "trino.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        {{- include "trino.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: worker
    {{- with .Values.config.worker.podLabels }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      annotations:
        checksum/config: {{ printf "%s%s" (include (print $.Template.BasePath "/configmap-worker.yaml") .) (include (print $.Template.BasePath "/secret.yaml") .) | sha256sum }}
    {{- with .Values.config.worker.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      securityContext:
        {{ toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-volume
          projected:
            sources:
            - configMap:
                name: {{ template "trino.worker" . }}

            {{- if and .Values.faultTolerance.enabled .Values.faultTolerance.configAsSecret }}
            - secret:
                name: {{ .Values.faultToleranceSecret | default "trino-fault-tolerance" }}
            {{- end }}
        {{- if eq .Values.config.general.catalogsMountType "configmap" }}
        - name: catalog-volume
          configMap:
            name: {{ template "trino.catalog" . }}
        {{ else }}
        - name: catalog-volume
          secret:
            secretName: {{ .Values.connectorsSecret | default "trino-connectors" }}
        {{- end }}
        - name: schemas-volume
          configMap:
            name: {{ template "trino.fullname" . }}-schemas-volume-worker
        - name: certs-shared
          emptyDir: {}
        {{- if .Values.jmxExporter.worker.enabled }}
        - name: jmx-exporter-config
          configMap:
            name: {{ template "trino.fullname" . }}-jmx-exporter
        - name: jmx-exporter-lib
          emptyDir: {}
        {{- end }}
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- range .Values.configMapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMapName }}
        {{- end }}
        {{- range $volumeName, $volume := .Values.config.worker.extraVolumes }}
        - name: {{ $volumeName }}
        {{- tpl (toYaml $volume) $ | nindent 10 -}}
        {{- end }}
      {{- if or .Values.jmxExporter.worker.enabled .Values.config.worker.initContainers }}
      initContainers:
      {{- if .Values.jmxExporter.worker.enabled }}
        - name: download-jmx-exporter
          image: {{ .Values.jmxExporter.image.repository }}:{{ .Values.jmxExporter.image.tag }}
          imagePullPolicy: {{ .Values.jmxExporter.image.pullPolicy }}
          securityContext:
            {{ toYaml .Values.containerSecurityContext | nindent 12 }}
          args:
            - "--output"
            - "{{ .Values.jmxExporter.path }}/lib/{{ .Values.jmxExporter.jarfile }}"
            - "{{ .Values.jmxExporter.downloadLink }}"
          volumeMounts:
          - name: jmx-exporter-lib
            mountPath: {{ .Values.jmxExporter.path }}/lib/
      {{- end }}
      {{- if .Values.config.worker.initContainers }}
      {{-  tpl (toYaml .Values.config.worker.initContainers) . | nindent 6 }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ include "trino.serviceAccountName" . }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{ toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- if or .Values.config.general.env .Values.config.worker.env }}
          env:
            {{- if .Values.config.general.env }}
              {{- tpl (toYaml .Values.config.general.env) . | nindent 12 }}
            {{- end }}
            {{- if .Values.config.worker.env }}
              {{- tpl (toYaml .Values.config.worker.env) . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if or .Values.config.general.envFrom .Values.config.worker.envFrom }}
          envFrom:
            {{- if .Values.config.general.envFrom }}
              {{-  tpl (toYaml .Values.config.general.envFrom) . | nindent 12 }}
            {{- end }}
            {{- if .Values.config.worker.envFrom }}
              {{-  tpl (toYaml .Values.config.worker.envFrom) . | nindent 12 }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.config.general.path }}
              name: config-volume
            - mountPath: /etc/trino/schemas
              name: schemas-volume
            - mountPath: {{ .Values.config.general.path }}/catalog
              name: catalog-volume
            - mountPath: {{ .Values.config.general.path }}/certs
              name: certs-shared
            {{- if .Values.jmxExporter.worker.enabled }}
            - mountPath: {{ .Values.jmxExporter.path }}/etc/
              name: jmx-exporter-config
            - mountPath: {{ .Values.jmxExporter.path }}/lib/
              name: jmx-exporter-lib
            {{- end }}
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
            {{- range .Values.configMapMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
            {{- range $mountName, $mount := .Values.config.worker.extraVolumeMounts }}
            - name: {{ $mountName }}
            {{- tpl (toYaml $mount) $ | nindent 14 -}}
            {{- end }}
          ports:
            - name: http-worker
              containerPort: {{ .Values.config.general.http.port }}
              protocol: TCP
          {{- if .Values.jmxExporter.worker.enabled }}
            - name: jmx-exporter
              containerPort: {{ .Values.jmxExporter.port | default 9000 }}
              protocol: TCP
          {{- end }}
          {{- with .Values.config.worker.lifecycle }}
          lifecycle:
{{ toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http-worker
            initialDelaySeconds: {{ .Values.config.worker.livenessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.config.worker.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.config.worker.livenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.config.worker.livenessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.config.worker.livenessProbe.successThreshold | default 1 }}
          readinessProbe:
            exec:
              command: [/usr/lib/trino/bin/health-check]
            initialDelaySeconds: {{ .Values.config.worker.readinessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.config.worker.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.config.worker.readinessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ .Values.config.worker.readinessProbe.failureThreshold | default 6 }}
            successThreshold: {{ .Values.config.worker.readinessProbe.successThreshold | default 1 }}
          resources:
{{ toYaml .Values.config.worker.resources | indent 12 }}
    {{- with .Values.config.worker.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.config.worker.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.config.worker.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
